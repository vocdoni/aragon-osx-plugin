name: MythX scan full SC

on:
  workflow_call:
    inputs:
      pr_number:
        description: PR Number to run this test against
        required: false
        type: string
      mode:
        description: "MythX scan mode (quick|standard|deep)"
        required: true
        type: string
    secrets:
      MYTHX_API_KEY:
        description: 'MythX API Token'
        required: true
  workflow_dispatch:
    inputs:
      mode:
        description: "MythX scan mode (quick|standard|deep)"
        required: true
        default: standard
        type: choice
        options:
          - quick
          - standard
          - deep

jobs:
  mythx:
    permissions: read-all
    runs-on: ubuntu-latest
    outputs:
      ANALYSIS_ID: ${{ steps.analysis_info.outputs.ANALYSIS_ID }}
      GROUP_ID: ${{ steps.analysis_info.outputs.GROUP_ID }}
      BRANCH_NAME: ${{ steps.myvars.outputs.BRANCH_NAME }}
      GIT_HASH_SHORT: ${{ steps.myvars.outputs.GIT_HASH_SHORT }}
      DATE_IN_SECS: ${{ steps.myvars.outputs.DATE_IN_SECS }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.pr_number != '' }}
        with:
          ref: refs/pull/${{ inputs.pr_number }}/merge
          fetch-depth: 0

      - uses: actions/checkout@v4
        if: ${{ inputs.pr_number == '' }}
        with:
          fetch-depth: 0

      - name: Set myvars
        id: myvars
        run: |
          branchname=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )
          dateinsecs=$(date +%s)
          githashshort=$(git rev-parse --short HEAD)
          echo "BRANCH_NAME=$branchname" >> $GITHUB_OUTPUT
          echo "GIT_HASH_SHORT=$githashshort" >> $GITHUB_OUTPUT
          echo "DATE_IN_SECS=$dateinsecs" >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: "yarn"
          node-version: 16

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python MythX CLI
        run: pip install mythx-cli

      - name: Install deps
        run: yarn

      - name: Run MythX
        run: |
          mythx \
          --api-key ${{ secrets.MYTHX_API_KEY }} \
          --format json \
          --yes \
          --output id \
          --config mythx.yml \
          analyze \
          --async \
          --mode "$MODE" \
          contracts/ 
        env:
          MODE: ${{ inputs.mode }}

      - name: Get MythX analysis details
        id: analysis_info
        run: |
          id=$(cat id | head -1)
          group_id=$(mythx --format=json --api-key ${{ secrets.MYTHX_API_KEY }} analysis status $id | jq -r .group_id)
          echo "ANALYSIS_ID=$id" >> $GITHUB_OUTPUT
          echo "GROUP_ID=$group_id" >> $GITHUB_OUTPUT
          ls -la

      - name: Upload MythX Analysis ID as Artifact
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: mythx-analysisid-${{ steps.myvars.outputs.GIT_HASH_SHORT }}
          path: id

  report:
    runs-on: ubuntu-latest
    needs: [mythx]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python MythX CLI
        run: pip install mythx-cli

      - name: Fetch MythX Report ( mode=${{ inputs.mode }} )
        if: ${{ inputs.mode == 'quick' }}
        run: |
          mythx \
          --output=mythx-report-${{ needs.mythx.outputs.GIT_HASH_SHORT }}.html \
          --api-key ${{ secrets.MYTHX_API_KEY }} \
          render ${{ needs.mythx.outputs.GROUP_ID }}

      - name: Write info to Summary
        run: |
          scan_msg=""
          if [ "${{ inputs.mode }}" = "quick" ]; then
            scan_msg="Download the report using the Github Artifact link."
          else
            scan_msg="Download the report using the Mythx Dashboard URL but wait for ~15 mins or ~45 mins for Standard or Deep scan respectively."
          fi
          SUMMARY=$'## MythX Analysis Summary\n* __Scan Mode__: ${{ inputs.mode }}\n* __Analysis ID__: ${{ needs.mythx.outputs.ANALYSIS_ID }}\n* __Group ID__: ${{ needs.mythx.outputs.GROUP_ID }}\n* __Dashboard URL__: https://dashboard.mythx.io/#/console/analyses/groups/${{ needs.mythx.outputs.GROUP_ID }} '
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "> :bulb: $scan_msg" >> $GITHUB_STEP_SUMMARY

      - name: Upload MythX Report as Artifact
        uses: actions/upload-artifact@v3
        if: ${{ inputs.mode == 'quick' }}
        with:
          name: mythx-report-${{ needs.mythx.outputs.GIT_HASH_SHORT }}
          path: mythx-report-${{ needs.mythx.outputs.GIT_HASH_SHORT }}.html

  comment:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    needs: [mythx, report]
    steps:
      - name: Comment a pull_request
        if: ${{ inputs.pr_number != '' }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          pr_number: ${{ inputs.pr_number }}
          message: 'Scan started in group [https://dashboard.mythx.io/#/console/analyses/groups/${{ needs.mythx.outputs.GROUP_ID }}](https://dashboard.mythx.io/#/console/analyses/groups/${{ needs.mythx.outputs.GROUP_ID }})'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: SEE HERE FOR DASHBOARD LINK
        run: |
          echo 'Scan started in group https://dashboard.mythx.io/#/console/analyses/groups/${{ needs.mythx.outputs.GROUP_ID }}'